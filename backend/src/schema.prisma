generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(cuid())
  username        String
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  userGames       UserGame[]
  responses       Response[] @relation("user")
  responseTargets Response[] @relation("targetUser")

  @@map("users")
}

model Game {
  id            String         @id @default(cuid())
  status        GameStatus     @default(NOT_STARTED)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  gameQuestions GameQuestion[]
  userGames     UserGame[]

  @@map("games")
}

model UserGame {
  id        String     @id @default(cuid())
  userId    String
  gameId    String
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  game      Game       @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime   @default(now())

  @@unique([userId, gameId])
  @@map("user_games")
}

model GameQuestion {
  id         String     @id @default(cuid())
  gameId     String
  questionId String
  game       Game       @relation(fields: [gameId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  question   Question   @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime   @default(now())
  responses  Response[]

  @@map("game_questions")
}

model Question {
  id            String         @id @default(cuid())
  content       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  gameQuestions GameQuestion[]

  @@map("questions")
}

model Response {
  id             String                 @id @default(cuid())
  gameQuestionId String
  userId         String
  targetUserId   String
  answer         String
  classification ResponseClassification @default(UNSCORED)
  aiMetadata     Json?
  createdAt      DateTime               @default(now())
  gameQuestion   GameQuestion           @relation(fields: [gameQuestionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user           User                   @relation("user", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  targetUser     User                   @relation("targetUser", fields: [targetUserId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("responses")
}

enum GameStatus {
  NOT_STARTED
  IN_PROGRESS
  ENDED
}

enum ResponseClassification {
  UNSCORED
  CORRECT
  WRONG
}